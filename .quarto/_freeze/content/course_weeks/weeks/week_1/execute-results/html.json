{
  "hash": "feb844952111816ed6b5b43500054b50",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"1 - Introduction to Causal Inference\"\nlinktitle: \"1 - Introduction to Causal Inference\"\noutput:\n  blogdown::html_page:\n    toc: true\nmenu:\n  example:\n    parent: Course content\n    weight: 1\ntype: docs\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n\n::: callout-important\nPlease make sure to read and follow the instructions in [**Organization**](../../organization/mattermost.qmd) before reading this section.\n:::\n\n# Slides & Recap\n\n[**Slides - Week 1**](../../../lecture/01.pdf)\n\n# Practical example\n\n## Christmas example\n\nConsider this scenario: you're the owner of an online marketplace company that small and medium-sized businesses use to sell advertise and sell their products. The businesses act autonomously regarding prices, advertising etc. Because your revenue depends on the prosperity of these businesses, you want to support them by offering guidance when to implement sales campaigns featuring temporary price drops. From a business perspective, a price drop is beneficial when the increase in number of sold units compensates for the lower price. Therefore,it is important to know the number of additional units sold after a price reduction. For simplicity, we only focus on one particular category, socks, and we examine the weeks leading up to and including Christmas week.\n\n**Question:** It helps to make oneself as clear as possible what the research question is. So, try to formulate a question that entails very clearly what effect we are interested in.\n\n<details>\n\n<summary>**Answer**</summary>\n\nWhat is the impact of a price reduction on the number of units sold?\n\n</details>\n\nNow, let's take a look at some data that you collected which could help you to answer your research question.\n\n::: callout-note\n`library()` loads external packages/libraries containing functions that are not built in base `R`. Here, we load the library `tidyverse`, which is, in fact, a collection of many useful libraries specifically developed for data science tasks.\n\nIf you only need one particular function from a library, you can pick it by the following syntax: `library::function()`.\n\nAll libraries/packages you want to use need to be installed first by running `install.packages(\"library_to_install\")`.\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Load packages from the tidyverse\n# install.packages(\"tidyverse\")\nlibrary(tidyverse)\n\n# Change the path if needed\nsales <- read_csv(\"xmas_sales.csv\")\n# Currently coded as 0/1, we convert to FALSE/TRUE\nsales$is_on_sale <- as.logical(sales$is_on_sale)\n```\n:::\n\n\nThe data consists of the following columns:\n\n-   *store*: unique identifier of store\n-   *weeks_to_xmas*: weekly data for each store leading up to Christmas\n-   *avg_week_sales*: historical average of sales indicating business size\n-   *is_on_sale*: sale/price reduction indicator\n-   *weekly_amount_sold*: average weekly sales during that week\n\n::: callout-note\nThere are many other ways to get a first look at your data instead of simply entering the variable name or use `print()`. Often times you will see `head(data, n)` to see the first $n$ lines. Just the same you can use `tail(data, n)` to see the $n$ last lines. If it is mainly numeric data, `summary()` provides a good overview. If you have many columns, `glimpse()` from the `dplyr` package contained in the `tidyverse` helps you.\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Simply enter the table name to show its content\nprint(sales)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,000 × 5\n   store weeks_to_xmas avg_week_sales is_on_sale weekly_amount_sold\n   <dbl>         <dbl>          <dbl> <lgl>                   <dbl>\n 1     1             3           13.0 TRUE                    220. \n 2     1             2           13.0 TRUE                    185. \n 3     1             1           13.0 TRUE                    146. \n 4     1             0           13.0 FALSE                   102. \n 5     2             3           19.9 FALSE                   103. \n 6     2             2           19.9 FALSE                    53.7\n 7     2             1           19.9 FALSE                    13.8\n 8     2             0           19.9 FALSE                     0  \n 9     3             3           18.5 FALSE                    97.0\n10     3             2           18.5 FALSE                    54.7\n# ℹ 1,990 more rows\n```\n\n\n:::\n:::\n\n\nLet' connect the data from the table with the formula notation you have learned in the lecture. First of all, it is important to state that our units of analysis $i$ are stores.\n\n$D_i$ denotes the **treatment** for unit $i$ and for our example it can take either one of the two values:\n\n$$\nD_i=\\begin{cases}1 \\ \\text{if unit i received treatment}\\\\0 \\ \\text{otherwise}\\\\\\end{cases} \n$$\n\nDon't be confused by the term treatment, it is not a medical treatment (but can be) and other terms used are intervention or manipulation. Here, the treatment $D_i$ is whether a store dropped its prices in a particular week.\n\n::: callout-tip\nSometimes, you will encounter $T_i$ instead of $D_i$. But because in `R`, *T* is used to abbreviate the boolean value `TRUE` and in many other applications, $T$ is reserved for *time*, we will use $D$ instead.\n:::\n\n**Question:** What is the data equivalent for the outcome $Y_i$?\n\n<details>\n\n<summary>**Answer**</summary>\n\nIt is `weekly_amount_sold`.\n\n</details>\n\nLet's revisit the initial research question. We are interested in the effect a price reduction has on sales. We can express it as either\n\n-   the effect of $T$ on $Y$\n-   the `is_on_sale` on `weekly_amount_sold`.\n\n## Fundamental problem of causal inference\n\nTo compute the effect, we would ideally know for each observation the counterfactual outcome, i.e. if it was on sale, how would have been sales if it was not on sales or if it was not on sale, how would have been sales if it was on sale? However, due to the **fundamental problem of causal inference**, it is impossible to observe both states.\n\nTherefore, at first, you are often tempted to compare the observations that were on sale (\"treated\") with the observations that were not on sale (\"control\"). Because that's easy to calculate, let's plot the result. A good way to compare and plot observations of two groups is a box plot.\n\n::: callout-note\nFor plots, we make use of the package `ggplot2` which is included in the `tidyverse` you already loaded. Both plots show the same data and convey the same message, but because `ggplot2` is a package dedicated to data visualization it has some advantages regarding aesthetics and the efficiency in creating plots.\n\nIf you are interested in an introduction to `ggplot2`, I recommend this [resource](https://meghan.rbind.io/slides/neair/neair.html#/ggplot2) written by Megan Hall.\n\nBy the way, don't be confused when your plot appears different in terms of colors, fonts etc. compared to the one shown here. It is adjusted to match the website theme.\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Box plot in base R\n# boxplot(weekly_amount_sold ~ is_on_sale, data = sales)\n\n# Box plot in ggplot2\nggplot(\n  data = sales, # first, provide the data\n  aes( # then, provide the aesthetics (at least X and Y)\n    x = is_on_sale, \n    y = weekly_amount_sold\n    )) +\n  geom_boxplot() # with a \"+\" add what type of plot\n```\n\n::: {.cell-output-display}\n![](week_1_files/figure-html/unnamed-chunk-3-1.png){fig-align='center' width=75%}\n:::\n:::\n\n\nWhat do we see? Stores that dropped their prices sell more. It confirms our intuition that people buy more on sale. However, the difference seems very high. Let's calculate it.\n\n::: callout-note\nTo access a data frame, there are several ways in R. In the following chapters, we will use other ways to extract data but here we use the following syntax: `dataframe[condition, ]$column`. First you take the data frame that contains the data you want to extract or subset. Then you provide a condition on how to subset. If you just want to have a specific column, you can extract it using the `$` operator. Please note that if your condition refers to a column in the same data frame, you need to call the data frame another time like `dataframe$filter_column`.\n\nTo compute the average of a column (or more precise: a vector), we use the function `mean()`.\n\nFor printing several variables, in notebooks, you can just collect them in a vector by `c(var1, var2, ...)`. If you want to name the elements provide a name in quotation marks: `c(\"name1\" = var1, ...)`.\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Outcome for all observations on sale\nY1 <- sales[sales$is_on_sale == TRUE, ]$weekly_amount_sold\nY1_mean <- mean(Y1)\n# Outcome for all observations not on sale\nY0 <- sales[sales$is_on_sale == FALSE, ]$weekly_amount_sold\nY0_mean <- mean(Y0)\n\n# Show both outcomes and their difference\nc(\n  \"Avg. outcome on sale\" = Y1_mean,\n  \"Avg. outcome not on sale\" = Y0_mean,\n  \"Difference\" = Y1_mean  - Y0_mean\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Avg. outcome on sale Avg. outcome not on sale               Difference \n                     141                       63                       78 \n```\n\n\n:::\n:::\n\n\nThe difference is even higher than the outcome for stores that did not implement a sales campaign. At this point, the alarm bells should ring - a simple comparison is very unlikely to yield a valid result.\n\n**Question:** What explanations can you think of that distort the relationship between the treatment variable and the outcome? Think back to what has been discussed in the lecture.\n\n<details>\n\n<summary>**Answer**</summary>\n\nThere might be one or several common causes (confounders). Two causes that affect both `is_on_sale` and `weekly_amount_sold` are the (1) business size (or: `avg_week_sales`) and the (2) time distance to Christmas (`weeks_to_xmas`). Because (1) larger businesses are more likely to implement sales campaigns and naturally sell more and because (2) sales are often implemented close to Christmas when customers buy anyway.\n\n</details>\n\nSummarizing, there is no way to know the *true* causal effect of price cuts on units sold as we do not observe both worlds for all units: the world with price cuts and the world without price cuts. That's what the fundamental problem of causal inference states. Throughout the whole course, we will come up with ways and methods to deal with this problem and get as close to the causal effect as possible.\n\n### Unrealistic scenario\n\nFor now, let's imagine the impossible and assume we can actually see both worlds and know both states for each observation. In potential outcomes (PO) notation, that means we can see both $Y_{i1}$ and $Y_{i0}$, where $0$ and $1$ refer to the treatment states for unit $i$.\n\n$$\nY_i=\\begin{cases}Y_{i1} \\ \\text{if unit i received treatment}\\\\Y_{i0} \\ \\text{otherwise}\\\\\\end{cases} \n$$\n\nWhen you take a look at the table, you see the observed outcome `y` and both potential outcomes `y0` and `y1`, one of which is the observed and the other one the counterfactual outcome. You also see a store identifier, the treatment status `t`, a covariate `x` and the individual treatment effect ($ITE$) `te`.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Read data  \"unrealistic\" scenario\nsales_unreal <- read_csv(\"sales_unreal.csv\")\n\n# Print table\nprint(sales_unreal)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n      i    y0    y1     t     x     y    te\n  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n1     1   200   220     0     0   200    20\n2     2   120   140     0     0   120    20\n3     3   300   400     0     1   300   100\n4     4   450   500     1     0   500    50\n5     5   600   600     1     0   600     0\n6     6   600   800     1     1   800   200\n```\n\n\n:::\n:::\n\n\nThe ITEs are computed as:\n\n$$\n\\tau_i = \\text{ITE}_i = Y_{i1} - Y_{i0}\n$$\n\nIn this unrealistic scenario, knowing all states, it is easy to compute the average treatment effect ($ATE$). For each unit, we subtract the untreated outcome from the treated outcome and take the average. Or even easier, because there are already computed ITEs in the data, we take the average of those.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nATE <- mean(sales_unreal$y1 - sales_unreal$y0) # equivalent to: mean(sales_unreal$te)\nATE\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 65\n```\n\n\n:::\n:::\n\n\nThe true average causal treatment effect is 65. In formula notation, we calculated the sample equivalent of\n\n$$\n\\text{ATE} = E[\\tau_i] = E[Y_i1 - Y_i0] \\,.\n$$\n\nWithout any problems, you could also calculate the conditional average treatment effect ($CATE$), i.e. the average treatment effect for units where the $X$ takes on the specified value $x$.\n\n$$\nCATE = E[Y_{i1} - Y_{i0} | X = x]\n$$\n\n### Realistic scenario\n\nBut now let's get back to the actual scenario: we just observe one outcome and we do not what would have happened in a different world. Consequently, the data looks like this:\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Read \"realistic\" scenario\nsales_real <- read_csv(\"sales_real.csv\")\n\n# Print table\nprint(sales_real)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 7\n      i    y0    y1     t     x     y te   \n  <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <lgl>\n1     1   200    NA     0     0   200 NA   \n2     2   120    NA     0     0   120 NA   \n3     3   300    NA     0     1   300 NA   \n4     4    NA   500     1     0   500 NA   \n5     5    NA   600     1     0   600 NA   \n6     6    NA   800     1     1   800 NA   \n```\n\n\n:::\n:::\n\n\nRemember, the true causal effect is 65. Let's check, how close we get when we try to estimate the ATE by comparing the treated observations to the untreated observations.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Average outcome for treated observations\ny1 <- mean(sales_real[sales_real$t == 1, ]$y)\n\n# Average outcome for not treated observations\ny0 <- mean(sales_real[sales_real$t == 0, ]$y)\n\n# Show both outcomes and their difference\nc(\n  \"Avg. treated outcomes\" = y1,\n  \"Avg. not treated outcomes\" = y0,\n  \"Difference\" = y1 - y0\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Avg. treated outcomes Avg. not treated outcomes                Difference \n                      633                       207                       427 \n```\n\n\n:::\n:::\n\n\nIt's $426.667$ and thus very far off. Again, it proves the danger of taking naive averages and the inequality of association and causation. The reason here is that businesses engaged in sales are different from those that did not and would have sold more regardless of price cut. \n\n### Bias\n\nThe difference is also called **bias** and with full knowledge of all states can be calculated by:\n\n$$\n\\begin{align}\nE[Y_1 - Y_0] &= E[Y|D=1] - E[Y|D=0] \\\\ &= E[Y_1|D=1] - E[Y_0|D=0] + E[Y_0|D=1] - E[Y_0|D=1] \\\\\n&= \\underbrace{E[Y_1 - Y_0|D=1]}_{ATT} + \\underbrace{\\{ E[Y_0|D=1] - E[Y_0|D=0] \\}}_{BIAS}\n\\end{align}\n$$\n\nYou see that there is a bias when $E[Y_0|D=1]$ is not equal to $E[Y_0|D=1]$. That means, for no bias to occur, treated and untreated units only differ in their treatment status and is called the ignorability or exchangeability assumption.\n\nGoing back to the dataset with many observations, what can you infer from this plot? Does the plot indicate any violations of the assumptions?\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Plot business size vs outcome\nggplot(\n  data = sales,\n  aes(x = avg_week_sales, \n      y = weekly_amount_sold, \n      color = is_on_sale) # different color depending on value of 'is_on_sale'\n  ) + geom_point(alpha = .5) # with alpha, we control point transparency\n```\n\n::: {.cell-output-display}\n![](week_1_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=75%}\n:::\n:::\n\n\n# Assignment\n\n::: assignment\nMake sure you went through all organizational steps and have accepted the [**Week 1 - Assignment**](https://classroom.github.com/a/qKNVakO4), which you will re-upload to GitHub Classroom via GitHub Desktop after solving the following questions.\n\n**[DEADLINE: Monday, 22 April 23:59]**\n\n1.  What is 1+1 ? \\[Example question to test GitHub upload\\]\n\n2.  What is 2+2 ? \\[Example question to test GitHub upload\\]\n\n3.  Go to the unrealistic scenario where you know all states and have all data at your hand.\n\n    1.  Compute the $CATE$ for all observed values of $X$. Check if there are any differences and explain the meaning of a $CATE$ compared to an $ATE$.\n\n    2.  Compute the bias with the given formula and explain whether it is an upward or a downward bias.\n\n4.  For the Christmas sales data:\n\n    1.  Discuss the assumptions you have learned in the lecture and argue what\n        assumptions are likely to hold or to be violated. The assumptions are:\n\n        <div>\n\n        > -   Assumption 1: No interference\n        > -   Assumption 2: Consistency\n        > -   Assumption 3: Assumption 1 + 2\n        > -   Assumption 4: Ignorability/Exchangeability\n        > -   Assumption 5: Conditional Exchangeability/Unconfoundedness\n        > -   Assumption 6: Positivity/Overlap/Common Support\n\n        </div>\n\n    2.  Just by looking at the last plot, find an interval with good overlap and balance between treated and untreated units and compute an average treatment effect for this interval.\n:::\n",
    "supporting": [
      "week_1_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}