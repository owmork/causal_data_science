pivot_longer(cols = c("age", "sex"))
df[1:10, ] %>%
pivot_longer(cols = c("age", "sex"))
df[1:10, ] %>%
pivot_longer(cols = c("age", "sex")) %>%
group_by(D) %>%
summarise(
mean(age), sd(age)
)
df[1:10, ] %>%
pivot_longer(cols = c("age", "sex"), names_to = "variable") %>%
group_by(D, variable) %>%
summarise(
mean(value), sd(value)
)
df[1:10, ] %>%
pivot_longer(cols = c("age", "sex"), names_to = "variable") %>%
group_by(D, variable) %>%
summarise(
mean = mean(value),
se = sd(value) / sqrt(10)
)
df[1:10, ] %>%
pivot_longer(cols = c("age", "sex"), names_to = "variable") %>%
group_by(D, variable) %>%
summarise(
mean = mean(value),
se = sd(value) / sqrt(10)
) %>%
ungroup() %>%
add_column(N = i)
df[1:i, ] %>%
pivot_longer(cols = c("age", "sex"), names_to = "variable") %>%
group_by(D, variable) %>%
summarise(
mean = mean(value),
se = sd(value) / sqrt(i)
)
i<-10
df[1:i, ] %>%
pivot_longer(cols = c("age", "sex"), names_to = "variable") %>%
group_by(D, variable) %>%
summarise(
mean = mean(value),
se = sd(value) / sqrt(i)
)
df[1:i, ] %>%
pivot_longer(cols = c("age", "sex"), names_to = "variable") %>%
group_by(D, variable) %>%
summarise(
mean = mean(value),
se = sd(value) / sqrt(i)
) %>%
ungroup()
df[1:i, ] %>%
pivot_longer(cols = c("age", "sex"), names_to = "variable") %>%
group_by(D, variable) %>%
summarise(
mean = mean(value),
se = sd(value) / sqrt(i)
) %>%
ungroup() %>%
add_column(N = i)
rm(i)
df_stats <- map(df$id, function(i) {
df[1:i, ] %>%
pivot_longer(cols = c("age", "sex"), names_to = "variable") %>%
group_by(D, variable) %>%
summarise(
mean = mean(value),
se = sd(value) / sqrt(i)
) %>%
ungroup() %>%
add_column(N = i)
})
df_stats <- map(df$id, function(i) {
df[1:i, ] %>%
pivot_longer(cols = c("age", "sex"), names_to = "variable") %>%
group_by(D, variable) %>%
summarise(
mean = mean(value),
se = sd(value) / sqrt(i),
.groups = "drop"
) %>%
ungroup() %>%
add_column(N = i)
})
#| message: false
# Load tidyverse package
library(tidyverse)
# Define population size
n <- 1e+3
# Create population with two characteristics
X <- tibble(
age = runif(n, 18, 65), # draw random values from uniform distribution
sex = rbinom(n, 1, 0.5), # draw random values from binomial distribution
id = 1:n
)
# Add randomly generated treatment variable
df <- tibble(X, D = rbinom(n, 1, .5))
df
df_stats <- map(df$id, function(i) {
df[1:i, ] %>%
pivot_longer(cols = c("age", "sex"), names_to = "variable") %>%
group_by(D, variable) %>%
summarise(
mean = mean(value),
se = sd(value) / sqrt(i),
.groups = "drop"
) %>%
ungroup() %>%
add_column(N = i)
})
df_stats %>% saveRDS("content/toolbox/rand_stats.rds")
df_stats
df_stats %>% bind_rows()
df_stats[[1]]
df_stats[[2]]
df_stats[[3]]
df_stats[[4]]
df_stats<-bind_rows(df_stats)
df_stats %>% saveRDS("content/toolbox/rand_stats.rds")
df_stats %>% head
qnorm(.975)
df_stats %>% mutate(ci_l = mean - qnorm(.975)*se, ci_h = mean + qnorm(.975)*se)
df_stats <- map(df$id, function(i) {
df[1:i, ] %>%
mutate(sex = 100*sex) %>%
pivot_longer(cols = c("age", "sex"), names_to = "variable") %>%
group_by(D, variable) %>%
summarise(
mean = mean(value),
se = sd(value) / sqrt(i),
.groups = "drop"
) %>%
ungroup() %>%
add_column(N = i)
}) %>%
bind_rows() %>%
mutate(D = as.character(D)) %>%
mutate(ci_l = mean - qnorm(.975)*se, ci_h = mean + qnorm(.975)*se)
df_stats
df_stats[20:30,]
df_stats %>% saveRDS("content/toolbox/rand_stats.rds")
df_stats <- map(df$id, function(i) {
df[1:i, ] %>%
mutate(sex = 100*sex) %>%
pivot_longer(cols = c("age", "sex"), names_to = "variable") %>%
group_by(D, variable) %>%
summarise(
mean = mean(value),
se = sd(value) / sqrt(i),
.groups = "drop"
) %>%
ungroup() %>%
add_column(N = i)
}) %>%
bind_rows() %>%
mutate(D = if_else(D==0, "control", "treatment")) %>%
mutate(ci_l = mean - qnorm(.975)*se, ci_h = mean + qnorm(.975)*se)
df_stats %>% saveRDS("content/toolbox/rand_stats.rds")
df_stats
seq(10, 1e+4, 10)
seq(10, 1e+4, 10) %>% length
# Load tidyverse package
library(tidyverse)
# Define population size
n <- 1e+4
# Create population with two characteristics
X <- tibble(
age = runif(n, 18, 65), # draw random values from uniform distribution
sex = rbinom(n, 1, 0.5), # draw random values from binomial distribution
id = 1:n
)
# Add randomly generated treatment variable
df <- tibble(X, treat = rbinom(n, 1, .5))
df
# Include interaction
lm_mod <- lm(outcome ~ treat * age + treat * sex, data = df_out)
df_out <- df %>%
mutate(outcome = 0.2*treat
+ 0.01*treat*age
+ treat*sex
+ rnorm(n, 2, 3),
outcome = 10 * outcome)
# Include interaction
lm_mod <- lm(outcome ~ treat * age + treat * sex, data = df_out)
summary(lm_mod)
hist(X$age)
hist(X$age)
hist(df_out$outcome)
df_out <- df %>%
mutate(outcome = 0.2*treat
+ 0.01*treat*age
+ treat*sex
+ rnorm(n, 2, 1),
outcome = 10 * outcome)
# Include interaction
lm_mod <- lm(outcome ~ treat * age + treat * sex, data = df_out)
summary(lm_mod)
# Load tidyverse package
library(tidyverse)
# Define population size
n <- 1e+4
# Create population with two characteristics
X <- tibble(
age = runif(n, 18, 65), # draw random values from uniform distribution
sex = rbinom(n, 1, 0.5), # draw random values from binomial distribution
id = 1:n
)
# Add randomly generated treatment variable
df <- tibble(X, treat = rbinom(n, 1, .5))
df
df_out <- df %>%
mutate(outcome = 0.2*treat
+ 0.01*treat*age
+ treat*sex
+ rnorm(n, 2, 1),
outcome = 10 * outcome)
# Include interaction
lm_mod <- lm(outcome ~ treat * age + treat * sex, data = df_out)
summary(lm_mod)
# Load tidyverse package
library(tidyverse)
# Define population size
n <- 1e+4
# Create population with two characteristics
X <- tibble(
age = runif(n, 18, 65), # draw random values from uniform distribution
sex = rbinom(n, 1, 0.5), # draw random values from binomial distribution
id = 1:n
)
# Add randomly generated treatment variable
df <- tibble(X, treat = rbinom(n, 1, .5))
df
df_out <- df %>%
mutate(outcome = 0.2*treat
+ 0.01*treat*age
+ treat*sex
+ rnorm(n, 2, 0),
outcome = 10 * outcome)
# Include interaction
lm_mod <- lm(outcome ~ treat * age + treat * sex, data = df_out)
summary(lm_mod)
# Load tidyverse package
library(tidyverse)
# Define population size
n <- 1e+4
# Create population with two characteristics
X <- tibble(
age = runif(n, 18, 65), # draw random values from uniform distribution
sex = rbinom(n, 1, 0.5), # draw random values from binomial distribution
id = 1:n
)
# Add randomly generated treatment variable
df <- tibble(X, treat = rbinom(n, 1, .5))
df
df_out <- df %>%
mutate(outcome = 0.2*treat
+ 0.01*treat*age
+ treat*sex
+ rnorm(n, 2, 0.5),
outcome = 10 * outcome)
# Include interaction
lm_mod <- lm(outcome ~ treat * age + treat * sex, data = df_out)
summary(lm_mod)
swirl()
swirl::swirl()
main()
swirl::main()
swirl::main()
siwrl()
swirl::bye()
swirl::swirl()
swirl::swirl()
swirl::bye()
swirl::swirl()
which git
1. Find `Pages` in the menu on the left and make sure the source *GitHub Action* is set.
readRDS("datasets/hospdd.rds")
df<-readRDS("datasets/hospdd.rds")
df$satis %>% summary
df[df$hospital <= 18 & df$month <=3,]
rlang::last_trace()
df[df$hospital <= 18 &,]
df[df$hospital <= 18,]
df[df$month <= 3,]
df
df$frequency %>% as.numeric()
class(df$month)<-"Numeric"
df[df$month <= 3,]
df
class(df$frequency)<-"Numeric"
class(df$procedure)<-"Numeric"
df
readRDS("datasets/abtest_online.rds")
readRDS("datasets/car_prices.rds")
class(df$procedure)<-"dbl"
df
df$procedure %>% sum
class(df$month)<-"int"
df$month %>% sum
class(df$frequency)<-"int"
df
df %>% saveRDS("datasets/hospdd.rds")
readRDS("datasets/hospdd.rds")
readRDS("datasets/abtest_online.rds")
readRDS("datasets/abtest_online.rds")
arrow::read_feather("/Users/oli/my_drive/TUHH/01_research/07_media/03_code/Python/workspace_processing/_all/matched_de2en_2023_29.feather")
library(tidyverse)
data <- tibble(
store = c(01, 11, 21, 31, 42, 52),
weeks_to_xmas = c(3, 2, 1, 0, 3, 2),
avg_week_sales = c(12.98, 12.98, 12.98, 12.98, 19.92, 19.92),
is_on_sale = c(1, 1, 1, 0, 0, 0),
weekly_amount_sold = c(219.60, 184.70, 145.75, 102.45, 103.22, 53.73)
)
data
library(tidyverse)
read_csv("xmas_sales.csv")
library(tidyverse)
read_csv(here::here("content", "course_weeks", "weeks", "xmas_sales.csv"))
# Load packages from the tidyverse
library(tidyverse)
# Change the path accordingly.
sales <- read_csv(here::here("content", "course_weeks", "weeks", "xmas_sales.csv"))
head(sales)
# Load packages from the tidyverse
library(tidyverse)
# Change the path accordingly.
sales <- read_csv(here::here("content", "course_weeks", "weeks", "xmas_sales.csv"))
sales
T+T
sales
sales[sales$is_on_sale == TRUE, ]
sales[sales$is_on_sale == TRUE, "weekly_amount_sold"]
sales[sales$is_on_sale == TRUE, ]$weekly_amount_sold
mean(sales[sales$is_on_sale == TRUE, ]$weekly_amount_sold)
mean(sales[sales$is_on_sale == FALSE, ]$weekly_amount_sold)
Y1 - Y0
Y1 <- mean(sales[sales$is_on_sale == TRUE, ]$weekly_amount_sold)
Y0 <- mean(sales[sales$is_on_sale == FALSE, ]$weekly_amount_sold)
Y1 - Y0
print(paste(Y1, Y0, Y1 - Y0))
c(Y1, Y0, Y1 - Y0)
c("on_sale" = Y1, Y0, Y1 - Y0)
c("on_sale" = Y1, "not_on_sale" = Y0, "difference" = Y1 - Y0)
Y1 <- mean(sales[sales$is_on_sale == TRUE, ]$weekly_amount_sold)
Y0 <- mean(sales[sales$is_on_sale == FALSE, ]$weekly_amount_sold)
c("on_sale" = Y1, "not_on_sale" = Y0, "difference" = Y1 - Y0) |> round(2)
sales2 <- tibble(
y0 = c(1, 2, 3, 4, 5, 6),
y1 = c(200, 120, 300, 450, 600, 600),
t = c(220, 140, 400, 500, 600, 800),
x = c(0, 0, 0, 1, 1, 1),
y = c(0, 0, 1, 0, 0, 1),
te = c(200, 120, 300, 500, 600, 800)
)
sales2
ATE <- sales2$y1 - sales2$y0
ATE
ATE <- mean(sales2$y1 - sales2$y0)
ATE
sales2 <- tibble(
i = c(1, 2, 3, 4, 5, 6),
y0 = c(200, 120, 300, 450, 600, 600),
y1 = c(220, 140, 400, 500, 600, 800),
t = c(0, 0, 0, 1, 1, 1),
x = c(0, 0, 1, 0, 0, 1),
y = c(200, 120, 300, 500, 600, 800),
te = c(20, 20, 100, 50, 0, 200)
)
sales2
ATE <- mean(sales2$y1 - sales2$y0)
ATE
CATE_x1 <- mean(sales2[sales2$x == 1, ]$y1 - sales2[sales2$x == 1, ]$y0)
CATE_x1 <- mean(sales2[sales2$x == 1, ]$y1 - sales2[sales2$x == 1, ]$y0)
CATE_x1
CATE_x0 <- mean(sales2[sales2$x == 0, ]$y1 - sales2[sales2$x == 0, ]$y0)
CATE_x0
sales_observed <- tibble(
i = c(1, 2, 3, 4, 5, 6),
y0 = c(200, 120, 300, NaN, NaN, NaN),
y1 = c(NaN, NaN, NaN, 500, 600, 800),
t = c(0, 0, 0, 1, 1, 1),
x = c(0, 0, 1, 0, 0, 1),
y = c(200, 120, 300, 500, 600, 800),
te = c(NaN, NaN, NaN, NaN, NaN, NaN)
)
sales_observed
sales_observed[sales_observed$t == 1, ]$y - sales_observed[sales_observed$t == 0, ]$y
mean(sales_observed[sales_observed$t == 1, ]$y - sales_observed[sales_observed$t == 0, ]$y)
ATE <- mean(sales_impossible$y1 - sales_impossible$y0)
sales_impossible <- tibble(
i = c(1, 2, 3, 4, 5, 6),
y0 = c(200, 120, 300, 450, 600, 600),
y1 = c(220, 140, 400, 500, 600, 800),
t = c(0, 0, 0, 1, 1, 1),
x = c(0, 0, 1, 0, 0, 1),
y = c(200, 120, 300, 500, 600, 800),
te = c(20, 20, 100, 50, 0, 200)
)
sales_impossible
ATE <- mean(sales_impossible$y1 - sales_impossible$y0)
ATE
sales_impossible[sales_impossible$t == 1, ]$y0
sales_impossible[sales_impossible$t == 0, ]$y0
mean(sales_impossible[sales_impossible$t == 1, ]$y0)
mean(sales_impossible[sales_impossible$t == 0, ]$y0)
y0_t1 <- mean(sales_impossible[sales_impossible$t == 1, ]$y0)
y0_t0 <- mean(sales_impossible[sales_impossible$t == 0, ]$y0)
c(y0_t1, y0_t0)
y0_t1 <- mean(sales_impossible[sales_impossible$t == 1, ]$y0)
y0_t0 <- mean(sales_impossible[sales_impossible$t == 0, ]$y0)
c(
"(Counterfactual) untreated outcome for treated units" = y0_t1,
"(Observed) untreated outcome for untreated units" = y0_t0
)
ggplot(data = sales, aes(x = avg_week_sales, y = weekly_amount_sold, color = is_on_sale)) + geom_point()
ggplot(data = sales, aes(x = avg_week_sales, y = weekly_amount_sold, color = as.factor(is_on_sale))) + geom_point()
ggplot(data = sales, aes(x = avg_week_sales, y = weekly_amount_sold, color = as.logical(is_on_sale))) + geom_point()
sales
sales
sales[sales$avg_week_sales > 10 & sales$avg_week_sales < 20, ]$weekly_amount_sold
mean(sales[sales$avg_week_sales > 10 & sales$avg_week_sales < 20 & sales$is_on_sale == 1, ]$weekly_amount_sold)
mean(sales[sales$avg_week_sales > 10 & sales$avg_week_sales < 20 & sales$is_on_sale == 0, ]$weekly_amount_sold)
126-54
sales
# Load packages from the tidyverse
library(tidyverse)
# Change the path accordingly.
sales <- read_csv(here::here("content", "course_weeks", "weeks", "xmas_sales.csv"), show_col_types = FALSE)
sales
sales |> group_by(store) |> summarise(mean(is_on_sale))
sales |> group_by(weeks_to_xmas) |> summarise(mean(is_on_sale))
sales
sales |> ggplot(aes(x = is_on_sale, y = weekly_amount_sold)) + geom_bar()
sales |> ggplot(aes(x = is_on_sale, y = weekly_amount_sold)) + geom_boxplot()
sales |> ggplot(aes(x = as.logical(is_on_sale), y = weekly_amount_sold)) + geom_boxplot()
boxplot(weekly_amount_sold ~ as.logical(is_on_sale), data = sales)
ggplot(data = sales, aes(x = as.logical(is_on_sale), y = weekly_amount_sold)) + geom_boxplot()
boxplot(weekly_amount_sold ~ as.logical(is_on_sale), data = sales)
# Outcome for all observations on sale
Y1 <- mean(sales[sales$is_on_sale == TRUE, ]$weekly_amount_sold)
# Outcome for all observations not on sale
Y0 <- mean(sales[sales$is_on_sale == FALSE, ]$weekly_amount_sold)
# Show both outcomes and their difference
c(
"Avg. outcome on sale" = Y1,
"Avg. outcome not on sale" = Y0,
"Difference" = Y1 - Y0
)
sales
sales$avg_week_sales
sales$avg_week_sales |> summary()
sales_unreal <- tibble(
i = c(1, 2, 3, 4, 5, 6),
y0 = c(200, 120, 300, 450, 600, 600),
y1 = c(220, 140, 400, 500, 600, 800),
t = c(0, 0, 0, 1, 1, 1),
x = c(0, 0, 1, 0, 0, 1),
y = c(200, 120, 300, 500, 600, 800),
te = c(20, 20, 100, 50, 0, 200)
)
sales_unreal
mean(sales_unreal$te)
CATE_x1 <- mean(sales_unreal[sales_unreal$x == 1, ]$y1 - sales_unreal[sales_unreal$x == 1, ]$y0)
CATE_x1
CATE_x0 <- mean(sales_unreal[sales_unreal$x == 0, ]$y1 - sales_unreal[sales_unreal$x == 0, ]$y0)
CATE_x0
View(sales_unreal)
sales_real <- tibble(
i = c(1, 2, 3, 4, 5, 6),
y0 = c(200, 120, 300, NaN, NaN, NaN),
y1 = c(NaN, NaN, NaN, 500, 600, 800),
t = c(0, 0, 0, 1, 1, 1),
x = c(0, 0, 1, 0, 0, 1),
y = c(200, 120, 300, 500, 600, 800),
te = c(NaN, NaN, NaN, NaN, NaN, NaN)
)
sales_real
mean(sales_real[sales_observed$t == 1, ]$y - sales_real[sales_observed$t == 0, ]$y)
y0_t1 <- mean(sales_real[sales_real$t == 1, ]$y0)
y0_t0 <- mean(sales_real[sales_real$t == 0, ]$y0)
c(
"(Counterfactual) untreated outcome for treated units" = y0_t1,
"(Observed) untreated outcome for untreated units" = y0_t0
)
y0_t1 <- mean(sales_unreal[sales_unreal$t == 1, ]$y0)
y0_t0 <- mean(sales_unreal[sales_unreal$t == 0, ]$y0)
c(
"(Counterfactual) untreated outcome for treated units" = y0_t1,
"(Observed) untreated outcome for untreated units" = y0_t0
)
ggplot(data = sales, aes(x = avg_week_sales, y = weekly_amount_sold, color = as.logical(is_on_sale))) + geom_point()
# Average outcome for treated observations
y1 <- mean(sales_real[sales_real$t == 1, ]$y)
# Average outcome for not treated observations
y0 <- mean(sales_real[sales_real$t == 0, ]$y)
c(
"Avg. treated outcomes" = y1,
"Avg. not treated outcomes" = y0,
"Difference" = y1 - y0
)
sales_unreal
ggplot(data = sales, aes(x = avg_week_sales, y = weekly_amount_sold, color = as.logical(is_on_sale))) + geom_point()
read_csv("xmas_sales.csv")
readr::read_csv("xmas_sales.csv")
readr::read_csv("content/course_weeks/weeks/xmas_sales.csv")
summary(mtcars)
??glimpse
install.packages("DT")
